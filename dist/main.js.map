{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/favorites/favorites.component.html","webpack:///./src/app/dashboard/favorites/favorites.component.ts","webpack:///./src/app/dashboard/film/actors/actors.component.html","webpack:///./src/app/dashboard/film/actors/actors.component.ts","webpack:///./src/app/dashboard/film/film.component.html","webpack:///./src/app/dashboard/film/film.component.ts","webpack:///./src/app/dashboard/film/rating/rating.component.html","webpack:///./src/app/dashboard/film/rating/rating.component.ts","webpack:///./src/app/dashboard/home/home.component.html","webpack:///./src/app/dashboard/home/home.component.ts","webpack:///./src/app/dashboard/search/search.component.html","webpack:///./src/app/dashboard/search/search.component.ts","webpack:///./src/app/services/film.service.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/footer/footer.module.ts","webpack:///./src/app/shared/guards/films-resolve-service.ts","webpack:///./src/app/shared/models/film-model.ts","webpack:///./src/app/shared/navbar/navbar-routes.config.ts","webpack:///./src/app/shared/navbar/navbar.component.html","webpack:///./src/app/shared/navbar/navbar.component.ts","webpack:///./src/app/shared/navbar/navbar.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div class=\"wrapper\">\n  <app-navbar></app-navbar>\n   <div class=\"main-panel\">\n       <ng-dashboard></ng-dashboard>\n       <app-footer></app-footer>\n   </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\ndeclare let $: any;\n\n@Component({\n    selector: 'app-root',\n    moduleId: module.id,\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n})\n\nexport class AppComponent implements OnInit {\n    public location: Location;\n\n    constructor(location: Location) {\n        this.location = location;\n    }\n\n    public ngOnInit(): void {\n        $.getScript('../assets/js/material-dashboard.js');\n        $.getScript('../assets/js/initMenu.js');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { FilmService } from './services/film.service';\n\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { FooterModule } from './shared/footer/footer.module';\nimport { NavbarModule} from './shared/navbar/navbar.module';\n\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        DashboardModule,\n        NavbarModule,\n        FooterModule,\n        CommonModule,\n        RouterModule.forRoot([])\n    ],\n    declarations: [ AppComponent, DashboardComponent ],\n    providers: [{   provide: LocationStrategy,\n                    useClass: HashLocationStrategy},\n                    FilmService],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ng-dashboard',\r\n    moduleId: module.id,\r\n    templateUrl: 'dashboard.component.html',\r\n})\r\n\r\nexport class DashboardComponent {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MODULE_COMPONENTS, MODULE_ROUTES } from './dashboard.routes';\r\nimport { FilmResolver } from '../shared/guards/films-resolve-service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(MODULE_ROUTES),\r\n        CommonModule,\r\n        FormsModule,\r\n    ],\r\n    declarations: [ MODULE_COMPONENTS ],\r\n    providers: [ FilmResolver ],\r\n})\r\n\r\nexport class DashboardModule {}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-10 wrap-for-films\" *ngFor=\"let film of filmList; let i = index\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card card-profile\">\r\n                        <div class=\"card-avatar card-avatar-manual\">\r\n                            <a routerLink=\"/film/{{film.id}}\" class=\"img-wrap\">\r\n                                <img class=\"img\"\r\n                                [src]=\"film.poster_path ? 'https://image.tmdb.org/t/p/w500/' + film.poster_path : '../assets/img/no-image.jpg'\"/>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"content\">\r\n                            <h6 class=\"category text-gray\">{{film.release_date}}</h6>\r\n                            <h4 class=\"card-title card-title-film\">{{film.title}}</h4>\r\n                            <p class=\"card-content card-content-film\">\r\n                                {{film.overview}}\r\n                            </p>\r\n                            <a routerLink=\"/film/{{film.id}}\" class=\"btn btn-danger btn-round\">Подробнее</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FilmService } from '../../services/film.service';\r\n\r\n@Component({\r\n    selector: 'app-favorites',\r\n    moduleId: module.id,\r\n    templateUrl: 'favorites.component.html',\r\n    styleUrls: ['favorites.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class FavoritesComponent implements OnInit {\r\n\r\n    public filmList: object[] = [];\r\n\r\n    constructor(private filmCardService: FilmService) {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.getFilms();\r\n    }\r\n\r\n    public getFilms(): void {\r\n        this.filmCardService.getFilmsFromMdb().subscribe((films: any) => {\r\n            if (films) {\r\n                films.forEach(film => {\r\n                    this.filmCardService.getFilmById(film.filmId).subscribe((filmItem: any) => {\r\n                        filmItem.year = filmItem.release_date.slice(0, 4) || 'неизвестно';\r\n                        this.filmList.push(filmItem);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"actors-wrap\">\r\n  <div class=\"actor-wrap col-md-2 col-sm-5 col-xs-7\" *ngFor=\"let actor of actors\" >\r\n    <img class=\"img\" [src] = \"actor.profile_path ? 'https://image.tmdb.org/t/p/w154/' + actor.profile_path : '../../assets/img/actor-logo.jpg'\"/>\r\n    <div class=\"actor-name\">{{actor.name}}</div>\r\n    <div class=\"actor-character\">{{actor.character}}</div>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport {FilmService} from '../../../services/film.service';\r\n\r\n@Component({\r\n    selector: 'app-actors',\r\n    moduleId: module.id,\r\n    templateUrl: 'actors.component.html',\r\n    styleUrls: ['actors.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class ActorsComponent implements OnInit {\r\n\r\n    @Input() public id: string;\r\n    public actors: Object[] = [];\r\n\r\n    constructor(\r\n                private filmCardService: FilmService\r\n                ) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.filmCardService.getActors(this.id)\r\n        .subscribe(actors => {\r\n            if (actors.length > 5) {\r\n                for (let i = 0; i < 5; i++) {\r\n                    this.actors[i] = actors[i];\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div id=\"wrap\" #wrap>\r\n    <div class=\"col-lg-12 film-background\"\r\n        [ngStyle]=\"{'background-image': 'url(https://image.tmdb.org/t/p/w1280/'+ filmItem.backdrop_path + ')'}\">\r\n\r\n        <div class=\"wrap-blue\">\r\n            <div class=\"container\">\r\n                <div class=\"spacer\"></div>\r\n                <div class=\"poster-film-wrap  col-md-4 col-xs-12\">\r\n                    <img width=\"300\"\r\n                    [src]=\"filmItem.poster_path ? 'https://image.tmdb.org/t/p/w500/' + filmItem.poster_path : '../assets/img/no-image.jpg'\"/>\r\n                </div\r\n                ><div class=\"film-info-wrap col-md-8 col-xs-12\">\r\n                    <div class=\"wrap-film-title\">\r\n                        <h1 class=\"film-title\">\r\n                            {{filmItem.title}} <span class=\"film-year\">({{filmItem.year}})</span>\r\n                        </h1>\r\n                        <div></div>\r\n                        <div class=\"users-rating\">\r\n                            <app-rating [rating] = 'filmItem.vote_average'></app-rating>\r\n                            <div class=\"film-star-wrap\" (click) = 'changeFilmStatus()'>\r\n                                <div class=\"film-star\" [ngClass]=\"{'film-star-added': filmAddedStatus}\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <h3 class=\"film-overview-title\">Обзор</h3>\r\n                        <div class=\"film-overview text-left\">{{filmItem.overview}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"container\">\r\n        <h3 class=\"film-main-rols\">В главных ролях </h3>\r\n        <app-actors [id] = 'id'></app-actors>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FilmService } from '../../services/film.service';\r\nimport { Film } from '../../shared/models/film-model';\r\n\r\n@Component({\r\n    selector: 'app-film',\r\n    moduleId: module.id,\r\n    templateUrl: 'film.component.html',\r\n    styleUrls: ['film.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class FilmComponent implements OnInit {\r\n\r\n    public id: string;\r\n    public filmItem: Film = new Film;\r\n    public filmYear: string;\r\n    public filmAddedStatus = false;\r\n    @ViewChild('wrap') public wrapDiv: ElementRef;\r\n\r\n    constructor(\r\n                private route: ActivatedRoute,\r\n                private filmCardService: FilmService\r\n                ) {\r\n                    window.scrollTo(0, 0);\r\n                }\r\n\r\n    public ngOnInit(): void {\r\n        this.id = this.route.snapshot.params['id'];\r\n        if (!this.id) { return; }\r\n\r\n        this.route.data.subscribe((data: {film: Film}) => {\r\n            this.filmItem = data.film;\r\n            this.filmItem.year = this.filmItem.release_date.slice(0, 4) || 'неизвестно';\r\n            this.getAllFilmsFromMdb();\r\n        });\r\n    }\r\n\r\n    public getAllFilmsFromMdb(): void {\r\n        this.filmCardService.getFilmsFromMdb().subscribe(data => {\r\n            window.scrollTo(0, 0);\r\n            if (data && data.length && data.length >= 1) {\r\n                data.forEach(film => {\r\n                    if (film.filmId && this.id === film.filmId) {\r\n                        this.filmAddedStatus = true;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public changeFilmStatus(): void {\r\n        if (this.filmAddedStatus) {\r\n            this.deleteFilm();\r\n        } else {\r\n            this.saveFilm();\r\n        }\r\n    }\r\n\r\n    public deleteFilm(): void {\r\n        this.filmCardService.deleteFilm(this.id).subscribe(data => {\r\n            this.filmAddedStatus = false;\r\n        });\r\n    }\r\n\r\n    public saveFilm(): void {\r\n        this.filmCardService.saveFilm(this.id).subscribe(data => {\r\n            this.filmAddedStatus = true;\r\n        });\r\n    }\r\n}\r\n","<div class=\"progress blue\">\r\n  <span class=\"progress-left\">\r\n      <span   class=\"progress-bar\"\r\n              [ngStyle]=\"{'transform': 'rotate(' + leftProgressDeg + 'deg)',\r\n                          'border-color': colorProgress}\">\r\n      </span>\r\n  </span>\r\n  <span class=\"progress-right\">\r\n      <span   class=\"progress-bar\"\r\n              [ngStyle]=\"{'transform': 'rotate(' + rightProgressDeg + 'deg)',\r\n                          'border-color': colorProgress}\">\r\n      </span>\r\n  </span>\r\n  <div class=\"progress-value\">{{rating*10}}%</div>\r\n</div>\r\n<div class=\"users-rating-text\">Рейтинг пользователей</div>","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {FilmService} from '../../../services/film.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-rating',\r\n    moduleId: module.id,\r\n    templateUrl: 'rating.component.html',\r\n    styleUrls: ['rating.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class RatingComponent implements OnChanges {\r\n\r\n    public id: string;\r\n    @Input() public rating: any;\r\n    public leftProgressDeg = 0;\r\n    public rightProgressDeg = 0;\r\n    public colorProgress = '';\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        for (const key in changes) {\r\n            if (changes.hasOwnProperty(key)) {\r\n                this.rating = changes[key].currentValue;\r\n            }\r\n        }\r\n        this.makeLoader();\r\n    }\r\n\r\n    constructor(\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private filmCardService: FilmService\r\n                ) {}\r\n\r\n    public makeLoader(): void {\r\n        const self = this;\r\n        const rating = this.rating ? this.rating * 10 : 0;\r\n\r\n        if (rating > 70) {\r\n            this.colorProgress = '#21D07A';\r\n        } else if (rating > 60) {\r\n            this.colorProgress = '#D2D531';\r\n        } else {\r\n            this.colorProgress = '#ff3300';\r\n        }\r\n        this.startLoader(self, rating);\r\n    }\r\n\r\n    public startLoader(self, rating): void {\r\n        setTimeout(function() {\r\n            if (rating > 0) {\r\n                if (self.rightProgressDeg >= 180) {\r\n                    self.leftProgressDeg = self.leftProgressDeg + 10.8;\r\n                    rating = rating - 3;\r\n                    self.startLoader(self, rating);\r\n                } else {\r\n                    if (self.rightProgressDeg >= 169) {\r\n                        self.rightProgressDeg = 180;\r\n                    } else {\r\n                        self.rightProgressDeg = self.rightProgressDeg + 10.8;\r\n                    }\r\n                    rating = rating - 3;\r\n                    self.startLoader(self, rating);\r\n                }\r\n            }\r\n        }, 30);\r\n    }\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 col-lg-10 wrap-for-films\" *ngFor=\"let film of filmList; let i = index\">\r\n                \r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card card-profile\">\r\n                        <div class=\"card-avatar card-avatar-manual\">\r\n                            <a routerLink=\"/film/{{film.id}}\" class=\"img-wrap\">\r\n                                <img class=\"img\"\r\n                                [src]=\"film.poster_path ? 'https://image.tmdb.org/t/p/w500/' + film.poster_path : '../assets/img/no-image.jpg'\"/>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"content\">\r\n                            <h6 class=\"category text-gray\">{{film.release_date}}</h6>\r\n                            <h4 class=\"card-title card-title-film\">{{film.title}}</h4>\r\n                            <p class=\"card-content card-content-film\">\r\n                                {{film.overview}}\r\n                            </p>\r\n                            <a routerLink=\"/film/{{film.id}}\" class=\"btn btn-danger btn-round\">Подробнее</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass] = \"{'loader': true, 'loader-custom': true, 'loader-hide': hideLoader}\">\r\n        <svg class=\"circular\" viewBox=\"25 25 50 50\">\r\n            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\r\n        </svg>\r\n    </div>\r\n    <div class=\"button-row\">\r\n        <button class=\"btn btn-danger btn-get-more\" (click)=\"getMoreFilms()\">Больше фильмов</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FilmService } from '../../services/film.service';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    moduleId: module.id,\r\n    templateUrl: 'home.component.html',\r\n    styleUrls: ['home.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n    public filmList: object[] = [];\r\n    public selectedValue: number;\r\n    public filmCategory: string;\r\n    public pageList: number;\r\n    public hideLoader: boolean;\r\n\r\n    constructor(\r\n        private filmCardService: FilmService\r\n    ) {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.filmCategory = 'popularity';\r\n        this.selectedValue = 1;\r\n        this.pageList = 1;\r\n        this.hideLoader = true;\r\n        this.getFilms();\r\n    }\r\n\r\n    public getFilms(): void {\r\n        this.hideLoader = false;\r\n        if (!this.filmCategory) { return; }\r\n        if (this.pageList === 1) { this.filmList = []; }\r\n        this.filmCardService.getFilms(this.filmCategory, this.pageList).subscribe(films => {\r\n            this.hideLoader = true;\r\n            if (films.length > 0) {\r\n                this.filmList = [...this.filmList, ...films];\r\n            }\r\n        },\r\n        error =>  console.error(error));\r\n    }\r\n\r\n    public getMoreFilms(): void {\r\n        this.pageList++;\r\n        this.getFilms();\r\n    }\r\n}\r\n","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div *ngIf = 'noResults' class=\"text-center\">\r\n                <h3>Простите, по Вашему запросу нет результатов</h3>\r\n            </div>\r\n            <div class=\"col-md-12 col-lg-10 wrap-for-films\" *ngFor=\"let film of filmList; let i = index\">\r\n                \r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card card-profile\">\r\n                        <div class=\"card-avatar card-avatar-manual\">\r\n                            <a routerLink=\"/film/{{film.id}}\" class=\"img-wrap\">\r\n                                <img class=\"img\"\r\n                                 [src]=\"film.poster_path ? 'https://image.tmdb.org/t/p/w500/' + film.poster_path : '../assets/img/no-image.jpg'\"/>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"content\">\r\n                            <h6 class=\"category text-gray\">{{film.release_date}}</h6>\r\n                            <h4 class=\"card-title card-title-film\">{{film.title}}</h4>\r\n                            <p class=\"card-content card-content-film\">\r\n                                {{film.overview}}\r\n                            </p>\r\n                            <a routerLink=\"/film/{{film.id}}\" class=\"btn btn-danger btn-round\">Подробнее</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div [ngClass] = \"{'loader': true, 'loader-custom': true, 'loader-hide': hideLoader}\">\r\n        <svg class=\"circular\" viewBox=\"25 25 50 50\">\r\n            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\r\n        </svg>\r\n    </div>\r\n    <div class=\"button-row\" *ngIf=\"showMoreButton\">\r\n            <button class=\"btn btn-danger btn-get-more\" (click)=\"getMoreFilms()\">Больше фильмов</button>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FilmService } from '../../services/film.service';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n    selector: 'app-search',\r\n    moduleId: module.id,\r\n    templateUrl: 'search.component.html',\r\n    styleUrls: ['search.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class SearchComponent implements OnInit, OnDestroy {\r\n\r\n    public filmList: Object[] = [];\r\n    public filmCategory: string;\r\n    public searchPageList = 1;\r\n    public hideLoader: boolean;\r\n    public showMoreButton = false;\r\n    public searchText: string;\r\n    public pagesInThisSearch: number;\r\n    public dataFilmsShort: string[];\r\n    public sub: any;\r\n    public noResults = false;\r\n\r\n    constructor(private filmCardService: FilmService,\r\n                private route: ActivatedRoute) {\r\n                    window.scrollTo(0, 0);\r\n                }\r\n\r\n    public ngOnInit(): void {\r\n        this.filmCategory = 'popularity';\r\n        this.hideLoader = true;\r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.searchText = params['film'];\r\n            if (this.searchText) {\r\n                this.getSearchFilms('new');\r\n            }\r\n        });\r\n    }\r\n\r\n    public getSearchFilms(typeSearch): void {\r\n        this.hideLoader = false;\r\n        this.filmList = [];\r\n        this.noResults = false;\r\n        if (typeSearch === 'new') {\r\n            this.searchPageList = 1;\r\n        }\r\n\r\n        this.filmCardService.getSearchFilms(this.searchText, this.searchPageList)\r\n        .subscribe(data => {\r\n\r\n            this.hideLoader = true;\r\n            this.pagesInThisSearch = +data.total_pages;\r\n            if (this.pagesInThisSearch > 1 && this.pagesInThisSearch > this.searchPageList) {\r\n                this.showMoreButton = true;\r\n            } else {\r\n                this.showMoreButton = false;\r\n            }\r\n            if (data && data.length) {\r\n                this.filmList = [...this.filmList, ...data];\r\n            } else {\r\n                this.noResults = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    public getMoreFilms(): void {\r\n        if (this.pagesInThisSearch >= this.searchPageList) {\r\n            this.searchPageList++;\r\n            this.getSearchFilms('more');\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.sub.unsubscribe();\r\n    }\r\n}\r\n","\r\nimport {throwError as observableThrowError,  Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Response } from '@angular/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class FilmService {\r\n    private apiKey = '4f6a92e0a096ef372e94f1dfb9403a29';\r\n    private apiUrl = 'https://api.themoviedb.org/3/';\r\n    private filmsUrl = `${this.apiUrl}discover/movie?api_key=${this.apiKey}&language=ru`;\r\n    private filmUrlFirstPart = `${this.apiUrl}movie/`;\r\n    private filmUrlSecondPart = `?api_key=${this.apiKey}&language=ru`;\r\n    private actorsUrlFirstPart = `${this.apiUrl}movie/`;\r\n    private actorsUrlSecondPart = `/credits?api_key=${this.apiKey}`;\r\n    private searchUrlFirstPart = `${this.apiUrl}search/movie?api_key=${this.apiKey}&language=ru&query=`;\r\n    private searchUrlSecondPart = '&page=';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    private extractListData (res: any): object {\r\n        const body = res;\r\n        return body.results || {};\r\n    }\r\n\r\n    private extracData(res: Response): object {\r\n        const body = res;\r\n        return body || {};\r\n    }\r\n\r\n    private extractActorsData(res: any): object {\r\n        // console.log(res, 'response ');\r\n        const body = res;\r\n        return body.cast || {};\r\n    }\r\n\r\n    public getFilms(filmCategory: string, page: number = 1): Observable<any> {\r\n        return this.http.get(\r\n            `${this.filmsUrl}&sort_by=${filmCategory}.desc&include_adult=false&include_video=false&page=${page}`\r\n        ).pipe(\r\n            map(this.extractListData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    public getSearchFilms(film: string, page: number): Observable<any> {\r\n        return this.http.get(\r\n            `${this.searchUrlFirstPart}${film}${this.searchUrlSecondPart}${page}&include_adult=false`\r\n        ).pipe(\r\n            map(this.extractListData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    public getFilmById(filmId: string): Observable<any> {\r\n        return this.http.get(this.filmUrlFirstPart + filmId + this.filmUrlSecondPart)\r\n        .pipe(\r\n            map(this.extracData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    public getActors(filmId: string): Observable<any> {\r\n        return this.http.get(this.actorsUrlFirstPart + filmId + this.actorsUrlSecondPart)\r\n        .pipe(\r\n            map(this.extractListData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    /*-------------------------BACKEND----------------------------------------------*/\r\n\r\n    public getFilmsFromMdb(): Observable<any> {\r\n        return this.http.get('./api/films')\r\n        .pipe(\r\n            map(this.extracData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    public saveFilm(id): Observable<any> {\r\n        const favorite = {filmId: id, status: true};\r\n        return this.http.post('./api/film', favorite)\r\n        .pipe(\r\n            map(this.extractListData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    public deleteFilm(id): Observable<any> {\r\n        return this.http.delete(`./api/film/${id}`)\r\n        .pipe(\r\n            map(this.extractListData),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    private handleError(error: Response | any): Observable<any> {\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n        const body = error.json() || '';\r\n        const err = body.error || JSON.stringify(body);\r\n        errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n        errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return observableThrowError(errMsg);\r\n    }\r\n}\r\n","<footer>\r\n    <div class=\"container-fluid\">\r\n        <nav class=\"pull-left\">\r\n            <ul>\r\n                <li>\r\n                    <a href=\"https://www.linkedin.com/in/alexreshetnyak/\">\r\n                        LinkedIn\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://github.com/alexReshetnyak\">\r\n                        GitHub\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <p class=\"copyright pull-right\">\r\n            &copy; {{currentDate | date: 'yyyy'}} Alexey Reshetnyak\r\n        </p>\r\n    </div>\r\n</footer>\r\n","import { Component, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'app-footer',\r\n    templateUrl: 'footer.component.html'\r\n})\r\n\r\nexport class FooterComponent {\r\n    public currentDate: Date = new Date();\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FooterComponent } from './footer.component';\r\n\r\n@NgModule({\r\n    imports: [ RouterModule, CommonModule ],\r\n    declarations: [ FooterComponent ],\r\n    exports: [ FooterComponent ]\r\n})\r\n\r\nexport class FooterModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Film } from '..//models/film-model';\r\nimport { FilmService } from '../../services/film.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class FilmResolver implements Resolve<Film> {\r\n\r\n  constructor(private filmService: FilmService, private router: Router) {}\r\n\r\n  public resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    return this.filmService.getFilmById(route.params.id);\r\n  }\r\n}\r\n","export class Film {\r\n  public release_date: string;\r\n  public vote_average: number;\r\n  public year: string;\r\n  public backdrop_path?: string;\r\n  public poster_path?: string;\r\n  public title: string;\r\n  public overview: string;\r\n}\r\n","import {  RouteInfo } from './navbar.metadata';\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: 'home', title: 'Популярные Фильмы',  icon: 'grade', class: '' },\r\n    { path: 'userfilms', title: 'Избранные фильмы',  icon: 'person', class: '' },\r\n];\r\n","<nav class=\"navbar navbar-danger film-navigation-wrap navbar-fixed-top\" role=\"navigation\">\r\n\t<div class=\"container film-navigation\">\r\n    \t<div class=\"navbar-header\">\r\n    \t\t<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n                <span class=\"sr-only\">Toggle navigation</span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n    \t\t</button>\r\n    \t\t<a class=\"navbar-brand\" href=\"#\"><img src=\"../../../assets/img/312x276-primary-blue.png\" height=\"40\"/></a>\r\n    \t</div>\r\n    \t<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n    \t\t<ul class=\"nav navbar-nav\">\r\n\t\t\t\t<li *ngFor=\"let menuItem of menuItems\" routerLinkActive=\"active\" class=\"{{menuItem.class}}\">\r\n\t\t\t\t\t<a  [routerLink]=\"[menuItem.path]\">\r\n\t\t\t\t\t\t<p class='navbar-menu-element'>\r\n\t\t\t\t\t\t\t<i class=\"material-icons\">{{menuItem.icon}}</i>\r\n\t\t\t\t\t\t\t{{menuItem.title}}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<form \tclass=\"navbar-form navbar-right form-search\"\r\n\t\t\t\t\t(submit) = 'launchSearchComponent(searchFilm)'\r\n\t\t\t\t\trole=\"search\">\r\n\t\t\t\t<div class=\"form-group form-black is-empty\">\r\n\t\t\t\t\t\t<input  type=\"text\"\r\n\t\t\t\t\t\t\t\tname = 'search'\r\n\t\t\t\t\t\t\t\tclass=\"form-control\"\r\n\t\t\t\t\t\t\t\t[(ngModel)] = 'searchFilm'\r\n\t\t\t\t\t\t\t\tplaceholder=\"Поиск фильмов\">\r\n\t\t\t\t\t\t<span class=\"material-input\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\"\r\n\t\t\t\t\t\tclass=\"btn btn-white btn-round btn-just-icon\">\r\n\t\t\t\t\t\t<i class=\"material-icons\">search</i><div class=\"ripple-container\"></div>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n    \t</div>\r\n\t</div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ROUTES } from './navbar-routes.config';\r\nimport { Router } from '@angular/router';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'app-navbar',\r\n    templateUrl: 'navbar.component.html',\r\n    styleUrls: ['navbar.component.css'],\r\n    preserveWhitespaces: true\r\n})\r\n\r\nexport class NavbarComponent implements OnInit {\r\n    public listTitles: any[];\r\n    public menuItems: any[];\r\n    public searchFilm = '';\r\n    public location: Location;\r\n\r\n    constructor(location: Location, private router: Router) {\r\n        this.location = location;\r\n    }\r\n    public ngOnInit(): any {\r\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n        this.menuItems = ROUTES.filter(menuItem => {\r\n            if (menuItem.path !== 'table') {\r\n                return menuItem;\r\n            }\r\n        });\r\n    }\r\n\r\n    public launchSearchComponent(searchFilm): void {\r\n        this.router.navigate(['/search/' + searchFilm]);\r\n        this.searchFilm = '';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NavbarComponent } from './navbar.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    imports: [ RouterModule, CommonModule, FormsModule ],\r\n    declarations: [ NavbarComponent ],\r\n    exports: [ NavbarComponent ]\r\n})\r\n\r\nexport class NavbarModule {}\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}